{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: |\n",
        "  UNCOVERING PATTERNS IN US ACCIDENTS\n",
        "  - MSDS 597 Project (Group 17)\n",
        "author:\n",
        "- name: Anshu Goli, Veera Jeeshitha kolla, Gireeshee Pandela, Siritha Chidipothu\n",
        "  affiliation: Rutgers University, New Brunswick\n",
        "format:\n",
        "  html:\n",
        "    code-fold: true\n",
        "execute:\n",
        "  echo: false   \n",
        "  warning: false\n",
        "  error: false\n",
        "output-dir: docs \n",
        "---\n",
        "\n",
        "\n",
        "## 1. Project Objective\n",
        "\n",
        "This project aims to explore traffic accident patterns in the United States using a comprehensive dataset of over *6.8 million records* from 2016 to 2023. We sought to uncover trends, analyze environmental and temporal factors, and apply regression modeling to predict accident duration and frequency.\n",
        "\n",
        "\n",
        "\n",
        "## 2. Data Source\n",
        "\n",
        "•⁠  ⁠*Dataset:* [US Accidents (3.0 Million records)](https://www.kaggle.com/datasets/sobhanmoosavi/us-accidents)  \n",
        "•⁠  ⁠*Provider:* Sobhan Moosavi (via Kaggle)  \n",
        "•⁠  ⁠*Scope:* Covers 49 U.S. states (excluding Alaska and Hawaii)  \n",
        "•⁠  ⁠*Time Period:* February 2016 – March 2023  \n",
        "•⁠  ⁠*Fields:* Accident timestamps, location, weather, road attributes, and traffic signals.\n",
        "\n",
        "\n",
        "\n",
        "## 3. Data Cleaning & Enrichment\n",
        "\n",
        "•⁠  ⁠Converted ⁠ Start_Time ⁠ and ⁠ End_Time ⁠ to datetime objects  \n",
        "•⁠  ⁠Created new features: ⁠ Duration_minutes ⁠, ⁠ Hour ⁠, ⁠ DayOfWeek ⁠, ⁠ Month ⁠, ⁠ Is_Weekend ⁠, ⁠ Day/Night ⁠, and ⁠ Season ⁠  \n",
        "•⁠  ⁠Handled missing values and selected relevant columns for analysis  \n",
        "•⁠  ⁠Final dataset was tidy, consistent, and analysis-ready\n",
        "\n",
        "\n",
        "\n",
        "## 4. Data Exploration Highlights\n",
        "\n",
        "•⁠  ⁠*Rush Hour Peaks:* Accidents spike around *7–9 AM* and *4–6 PM*  \n",
        "•⁠  ⁠*High-Risk States/Cities:* California, Florida, and Texas report the most accidents  \n",
        "•⁠  ⁠*Weather Insight:* Most accidents happen in *clear or fair weather*, not during storms or snow  \n",
        "•⁠  ⁠*Temperature Trend:* Most accidents occur in *moderate temperatures (32°F–80°F)*  \n",
        "•⁠  ⁠*Location Density:* Accidents cluster around *major highways and urban areas*\n",
        "\n",
        "\n",
        "\n",
        "## 5. Data Visualization Summary\n",
        "\n",
        "### i.Distribution of Accidents by Hour\n",
        "\n",
        "This plot shows the **distribution of accidents** across different hours of the day. It helps identify when accidents are more likely to occur.\n",
        "\n",
        "**Variables**:\n",
        "\n",
        "**- X-axis**: Hour of the day (from 0 to 23) — This represents the time of day when accidents occurred.\n",
        "\n",
        "**- Y-axis**: Number of Accidents — The total count of accidents that happened at each hour of the day.\n",
        "\n",
        "The plot reveals patterns in accident occurrences based on time, helping to identify peak accident hours.\n"
      ],
      "id": "d16c2315"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "# Load the dataset\n",
        "accidents_df = pd.read_csv(\"/Users/anshureddy/Desktop/dwproject/accidents_cleaned.csv\")\n",
        "\n",
        "sns.set(style=\"whitegrid\", palette=\"Set2\")\n",
        "\n",
        "# Ensure Hour column exists\n",
        "if 'Hour' not in accidents_df.columns:\n",
        "    accidents_df['Hour'] = accidents_df['Start_Time'].dt.hour\n",
        "\n",
        "plt.figure(figsize=(10,6))\n",
        "sns.histplot(accidents_df['Hour'], bins=24, kde=False, color='coral')\n",
        "plt.title('Distribution of Accidents by Hour')\n",
        "plt.xlabel('Hour of Day')\n",
        "plt.ylabel('Number of Accidents')\n",
        "plt.xticks(range(0,24))\n",
        "plt.grid(True)\n",
        "plt.show()"
      ],
      "id": "7497d65b",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "### ii.Top 10 States with Most Accidents\n",
        "\n",
        "This plot visualizes the **distribution of accidents** across the **top 10 states**. It helps identify which states have the highest accident rates.\n",
        "\n",
        "**Variables**:\n",
        "\n",
        "- **Labels**: States (e.g., \"California\", \"New York\")\n",
        "\n",
        "- **Values**: Number of Accidents — The number of accidents that occurred in each state.\n"
      ],
      "id": "c6fc7a69"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "top_states = accidents_df['State'].value_counts().head(10)\n",
        "\n",
        "plt.figure(figsize=(8,8))\n",
        "plt.pie(top_states.values, labels=top_states.index, autopct='%1.1f%%', startangle=140, colors=sns.color_palette('pastel'))\n",
        "plt.title('Top 10 States with Most Accidents')\n",
        "plt.show()"
      ],
      "id": "26f0300a",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "### iii.Top 10 Cities with Most Accidents\n",
        "\n",
        "This bar plot shows the **top 10 cities** with the most accidents. It gives insights into the cities where accidents are most frequent.\n",
        "\n",
        "**Variables**:\n",
        "\n",
        "- **X-axis**: Number of Accidents — The total count of accidents in each city.\n",
        "\n",
        "- **Y-axis**: Cities — The names of the cities.\n"
      ],
      "id": "d8ba8d10"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "top_cities = accidents_df['City'].value_counts().head(10)\n",
        "\n",
        "plt.figure(figsize=(10,6))\n",
        "sns.barplot(y=top_cities.index, x=top_cities.values, palette=\"Blues_d\")\n",
        "plt.title('Top 10 Cities with Most Accidents')\n",
        "plt.xlabel('Number of Accidents')\n",
        "plt.ylabel('City')\n",
        "plt.show()"
      ],
      "id": "1a4ae42e",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "### iv.Top 10 Weather Conditions during Accidents\n",
        "\n",
        "This bar plot displays the **top 10 weather conditions** under which accidents occurred.\n",
        "\n",
        "**Variables**:\n",
        "\n",
        "- **X-axis**: Weather Conditions (e.g., \"Clear\", \"Rain\")\n",
        "\n",
        "- **Y-axis**: Number of Accidents — The number of accidents that occurred under each weather condition.\n"
      ],
      "id": "0e11482d"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "top_weather = accidents_df['Weather_Condition'].value_counts().head(10)\n",
        "weather_df = top_weather.reset_index()\n",
        "weather_df.columns = ['Weather', 'Counts']\n",
        "\n",
        "plt.figure(figsize=(12,6))\n",
        "sns.barplot(x='Weather', y='Counts', data=weather_df, palette='cubehelix')\n",
        "plt.title('Top 10 Weather Conditions during Accidents')\n",
        "plt.xlabel('Weather Condition')\n",
        "plt.ylabel('Number of Accidents')\n",
        "plt.xticks(rotation=45)\n",
        "plt.show()"
      ],
      "id": "86661377",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "### v.Temperature Distribution during Accidents\n",
        "\n",
        "This box plot compares **temperatures during accidents** on weekdays and weekends.\n",
        "\n",
        "**Variables**:\n",
        "\n",
        "- **X-axis**: Is_Weekend (1 for Weekend, 0 for Weekday)\n",
        "\n",
        "- **Y-axis**: Temperature (Fahrenheit) — The temperature at the time of the accident.\n"
      ],
      "id": "5a621b7d"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# Ensure Is_Weekend column exists\n",
        "if 'Is_Weekend' not in accidents_df.columns:\n",
        "    accidents_df['Start_Time'] = pd.to_datetime(accidents_df['Start_Time'], errors='coerce')\n",
        "    accidents_df['Weekday'] = accidents_df['Start_Time'].dt.weekday\n",
        "    accidents_df['Is_Weekend'] = accidents_df['Weekday'].apply(lambda x: 1 if x >= 5 else 0)\n",
        "\n",
        "plt.figure(figsize=(10,6))\n",
        "sns.boxplot(x='Is_Weekend', y='Temperature(F)', data=accidents_df, palette=\"coolwarm\")\n",
        "plt.title('Temperature during Accidents (Weekday vs Weekend)')\n",
        "plt.xlabel('Weekend (1) vs Weekday (0)')\n",
        "plt.ylabel('Temperature (F)')\n",
        "plt.show()"
      ],
      "id": "04de5402",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "### vi.Accident Locations in USA\n",
        "\n",
        "This scatter plot visualizes **accident locations** across the United States using geographic coordinates.\n",
        "\n",
        "**Variables**:\n",
        "\n",
        "- **X-axis**: Longitude — The geographic coordinate representing the east-west position.\n",
        "\n",
        "- **Y-axis**: Latitude — The geographic coordinate representing the north-south position.\n"
      ],
      "id": "7de8c19d"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "plt.figure(figsize=(12,8))\n",
        "sns.scatterplot(x='Start_Lng', y='Start_Lat', data=accidents_df, alpha=0.1, s=10, color='purple')\n",
        "plt.title('Accident Locations in USA')\n",
        "plt.xlabel('Longitude')\n",
        "plt.ylabel('Latitude')\n",
        "plt.show()"
      ],
      "id": "cb221d9a",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "### vii.Interactive Plot: Number of Accidents by Hour\n",
        "\n",
        "This interactive plot shows the number of accidents across **different hours of the day**. It's interactive, so you can hover over each bar to see the exact number of accidents.\n",
        "\n",
        "**Variables**:\n",
        "\n",
        "- **X-axis**: Hour of the Day — The time of day when accidents occurred.\n",
        "\n",
        "- **Y-axis**: Number of Accidents — The total number of accidents that occurred at each hour.\n"
      ],
      "id": "c6cf8cfd"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import plotly.express as px\n",
        "\n",
        "# Count accidents by hour\n",
        "hourly_counts = accidents_df['Hour'].value_counts().sort_index()\n",
        "\n",
        "# Create interactive bar chart\n",
        "fig = px.bar(x=hourly_counts.index, y=hourly_counts.values,\n",
        "             labels={'x': 'Hour of Day', 'y': 'Number of Accidents'},\n",
        "             title='Number of Accidents by Hour',\n",
        "             color_discrete_sequence=[\"indianred\"])\n",
        "\n",
        "fig.update_layout(xaxis=dict(tickmode='linear', dtick=1))\n",
        "fig.show()"
      ],
      "id": "e3a68e90",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## 6. Regression Modeling\n",
        "\n",
        "### 6.1 Objective\n",
        "Predict accident *duration and frequency* using features like temperature, weather, state, and city.\n",
        "\n",
        "### 6.2 Models Used\n",
        "•⁠  ⁠*Linear Regression* (baseline model)  \n",
        "•⁠  ⁠*Ridge Regression* (with L2 regularization)\n",
        "\n",
        "### 6.3 Results\n",
        "•⁠  ⁠Both models had *very low R² (0.02)* and *high MSE (~17.96B)*  \n",
        "•⁠  ⁠Ridge offered *no performance improvement*  \n",
        "•⁠  ⁠Coefficients showed minor influence from selected features\n",
        "\n",
        "### 6.4 Interpretation\n",
        "•⁠  ⁠Weak model performance suggests missing important predictors (e.g., road type, traffic density)  \n",
        "•⁠  ⁠Future work should explore *non-linear models* (e.g., Random Forest, XGBoost) for better accuracy\n",
        "\n",
        "\n",
        "\n",
        "## 7. Project Access\n",
        "\n",
        "•⁠  ⁠📘 *Notebook version:*  \n",
        "  [nbviewer link](https://nbviewer.org/gist/GireesheePendela05/2ded31d49d9f2d018ca47b055ca543b0)\n",
        "\n",
        "•⁠  ⁠🌐 *Website version:*  \n",
        "  [GitHub Pages website](https://moran-teaching.github.io/project-repo/)\n",
        "\n",
        "•⁠  ⁠🧪 *Processed data:*  \n",
        "  [Google Drive link](https://drive.google.com/file/d/1n1PY7TDNqYezVx1R4wanDH9AMJ6FLbNQ/view?usp=sharing)\n"
      ],
      "id": "663b4db9"
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}